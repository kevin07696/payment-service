// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.19.6
// source: proto/payment/v1/payment.proto

package paymentv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TransactionStatus represents the current state of a transaction
// Matches database constraint: ('pending', 'completed', 'failed', 'refunded', 'voided')
type TransactionStatus int32

const (
	TransactionStatus_TRANSACTION_STATUS_UNSPECIFIED TransactionStatus = 0
	TransactionStatus_TRANSACTION_STATUS_PENDING     TransactionStatus = 1
	TransactionStatus_TRANSACTION_STATUS_COMPLETED   TransactionStatus = 2
	TransactionStatus_TRANSACTION_STATUS_FAILED      TransactionStatus = 3
	TransactionStatus_TRANSACTION_STATUS_REFUNDED    TransactionStatus = 4
	TransactionStatus_TRANSACTION_STATUS_VOIDED      TransactionStatus = 5
)

// Enum value maps for TransactionStatus.
var (
	TransactionStatus_name = map[int32]string{
		0: "TRANSACTION_STATUS_UNSPECIFIED",
		1: "TRANSACTION_STATUS_PENDING",
		2: "TRANSACTION_STATUS_COMPLETED",
		3: "TRANSACTION_STATUS_FAILED",
		4: "TRANSACTION_STATUS_REFUNDED",
		5: "TRANSACTION_STATUS_VOIDED",
	}
	TransactionStatus_value = map[string]int32{
		"TRANSACTION_STATUS_UNSPECIFIED": 0,
		"TRANSACTION_STATUS_PENDING":     1,
		"TRANSACTION_STATUS_COMPLETED":   2,
		"TRANSACTION_STATUS_FAILED":      3,
		"TRANSACTION_STATUS_REFUNDED":    4,
		"TRANSACTION_STATUS_VOIDED":      5,
	}
)

func (x TransactionStatus) Enum() *TransactionStatus {
	p := new(TransactionStatus)
	*p = x
	return p
}

func (x TransactionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_payment_v1_payment_proto_enumTypes[0].Descriptor()
}

func (TransactionStatus) Type() protoreflect.EnumType {
	return &file_proto_payment_v1_payment_proto_enumTypes[0]
}

func (x TransactionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionStatus.Descriptor instead.
func (TransactionStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_payment_v1_payment_proto_rawDescGZIP(), []int{0}
}

// TransactionType represents the type of transaction
// Matches database constraint: ('charge', 'refund', 'pre_note', 'auth', 'capture')
type TransactionType int32

const (
	TransactionType_TRANSACTION_TYPE_UNSPECIFIED TransactionType = 0
	TransactionType_TRANSACTION_TYPE_AUTH        TransactionType = 1 // Authorization only
	TransactionType_TRANSACTION_TYPE_CAPTURE     TransactionType = 2 // Capture authorized funds
	TransactionType_TRANSACTION_TYPE_CHARGE      TransactionType = 3 // Combined auth + capture (sale)
	TransactionType_TRANSACTION_TYPE_REFUND      TransactionType = 4 // Return funds
	TransactionType_TRANSACTION_TYPE_PRE_NOTE    TransactionType = 5 // ACH verification
)

// Enum value maps for TransactionType.
var (
	TransactionType_name = map[int32]string{
		0: "TRANSACTION_TYPE_UNSPECIFIED",
		1: "TRANSACTION_TYPE_AUTH",
		2: "TRANSACTION_TYPE_CAPTURE",
		3: "TRANSACTION_TYPE_CHARGE",
		4: "TRANSACTION_TYPE_REFUND",
		5: "TRANSACTION_TYPE_PRE_NOTE",
	}
	TransactionType_value = map[string]int32{
		"TRANSACTION_TYPE_UNSPECIFIED": 0,
		"TRANSACTION_TYPE_AUTH":        1,
		"TRANSACTION_TYPE_CAPTURE":     2,
		"TRANSACTION_TYPE_CHARGE":      3,
		"TRANSACTION_TYPE_REFUND":      4,
		"TRANSACTION_TYPE_PRE_NOTE":    5,
	}
)

func (x TransactionType) Enum() *TransactionType {
	p := new(TransactionType)
	*p = x
	return p
}

func (x TransactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_payment_v1_payment_proto_enumTypes[1].Descriptor()
}

func (TransactionType) Type() protoreflect.EnumType {
	return &file_proto_payment_v1_payment_proto_enumTypes[1]
}

func (x TransactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionType.Descriptor instead.
func (TransactionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_payment_v1_payment_proto_rawDescGZIP(), []int{1}
}

// PaymentMethodType represents the payment method used
type PaymentMethodType int32

const (
	PaymentMethodType_PAYMENT_METHOD_TYPE_UNSPECIFIED PaymentMethodType = 0
	PaymentMethodType_PAYMENT_METHOD_TYPE_CREDIT_CARD PaymentMethodType = 1
	PaymentMethodType_PAYMENT_METHOD_TYPE_ACH         PaymentMethodType = 2
)

// Enum value maps for PaymentMethodType.
var (
	PaymentMethodType_name = map[int32]string{
		0: "PAYMENT_METHOD_TYPE_UNSPECIFIED",
		1: "PAYMENT_METHOD_TYPE_CREDIT_CARD",
		2: "PAYMENT_METHOD_TYPE_ACH",
	}
	PaymentMethodType_value = map[string]int32{
		"PAYMENT_METHOD_TYPE_UNSPECIFIED": 0,
		"PAYMENT_METHOD_TYPE_CREDIT_CARD": 1,
		"PAYMENT_METHOD_TYPE_ACH":         2,
	}
)

func (x PaymentMethodType) Enum() *PaymentMethodType {
	p := new(PaymentMethodType)
	*p = x
	return p
}

func (x PaymentMethodType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentMethodType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_payment_v1_payment_proto_enumTypes[2].Descriptor()
}

func (PaymentMethodType) Type() protoreflect.EnumType {
	return &file_proto_payment_v1_payment_proto_enumTypes[2]
}

func (x PaymentMethodType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentMethodType.Descriptor instead.
func (PaymentMethodType) EnumDescriptor() ([]byte, []int) {
	return file_proto_payment_v1_payment_proto_rawDescGZIP(), []int{2}
}

// AuthorizeRequest authorizes a payment without capturing
type AuthorizeRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	AgentId    string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`          // Multi-tenant: which agent/merchant
	CustomerId string                 `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"` // Customer ID (nullable for guest transactions)
	Amount     string                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`                           // Decimal as string (e.g., "29.99")
	Currency   string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`                       // ISO 4217 code (e.g., "USD")
	// Payment method - exactly one required
	//
	// Types that are valid to be assigned to PaymentMethod:
	//
	//	*AuthorizeRequest_PaymentMethodId
	//	*AuthorizeRequest_PaymentToken
	PaymentMethod  isAuthorizeRequest_PaymentMethod `protobuf_oneof:"payment_method"`
	IdempotencyKey string                           `protobuf:"bytes,7,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`
	Metadata       map[string]string                `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AuthorizeRequest) Reset() {
	*x = AuthorizeRequest{}
	mi := &file_proto_payment_v1_payment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeRequest) ProtoMessage() {}

func (x *AuthorizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_v1_payment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeRequest.ProtoReflect.Descriptor instead.
func (*AuthorizeRequest) Descriptor() ([]byte, []int) {
	return file_proto_payment_v1_payment_proto_rawDescGZIP(), []int{0}
}

func (x *AuthorizeRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *AuthorizeRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *AuthorizeRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *AuthorizeRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *AuthorizeRequest) GetPaymentMethod() isAuthorizeRequest_PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return nil
}

func (x *AuthorizeRequest) GetPaymentMethodId() string {
	if x != nil {
		if x, ok := x.PaymentMethod.(*AuthorizeRequest_PaymentMethodId); ok {
			return x.PaymentMethodId
		}
	}
	return ""
}

func (x *AuthorizeRequest) GetPaymentToken() string {
	if x != nil {
		if x, ok := x.PaymentMethod.(*AuthorizeRequest_PaymentToken); ok {
			return x.PaymentToken
		}
	}
	return ""
}

func (x *AuthorizeRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *AuthorizeRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type isAuthorizeRequest_PaymentMethod interface {
	isAuthorizeRequest_PaymentMethod()
}

type AuthorizeRequest_PaymentMethodId struct {
	PaymentMethodId string `protobuf:"bytes,5,opt,name=payment_method_id,json=paymentMethodId,proto3,oneof"` // UUID of saved payment method
}

type AuthorizeRequest_PaymentToken struct {
	PaymentToken string `protobuf:"bytes,6,opt,name=payment_token,json=paymentToken,proto3,oneof"` // EPX token (AUTH_GUID/BRIC) for one-time use
}

func (*AuthorizeRequest_PaymentMethodId) isAuthorizeRequest_PaymentMethod() {}

func (*AuthorizeRequest_PaymentToken) isAuthorizeRequest_PaymentMethod() {}

// CaptureRequest captures a previously authorized payment
type CaptureRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TransactionId  string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` // Original authorization transaction ID
	Amount         string                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`                                    // Optional: partial capture amount
	IdempotencyKey string                 `protobuf:"bytes,3,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CaptureRequest) Reset() {
	*x = CaptureRequest{}
	mi := &file_proto_payment_v1_payment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CaptureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptureRequest) ProtoMessage() {}

func (x *CaptureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_v1_payment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptureRequest.ProtoReflect.Descriptor instead.
func (*CaptureRequest) Descriptor() ([]byte, []int) {
	return file_proto_payment_v1_payment_proto_rawDescGZIP(), []int{1}
}

func (x *CaptureRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *CaptureRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CaptureRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

// SaleRequest combines authorize and capture
type SaleRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	AgentId    string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	CustomerId string                 `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"` // Nullable for guest transactions
	Amount     string                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`                           // Decimal as string
	Currency   string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	// Payment method - exactly one required
	//
	// Types that are valid to be assigned to PaymentMethod:
	//
	//	*SaleRequest_PaymentMethodId
	//	*SaleRequest_PaymentToken
	PaymentMethod  isSaleRequest_PaymentMethod `protobuf_oneof:"payment_method"`
	IdempotencyKey string                      `protobuf:"bytes,7,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`
	Metadata       map[string]string           `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SaleRequest) Reset() {
	*x = SaleRequest{}
	mi := &file_proto_payment_v1_payment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaleRequest) ProtoMessage() {}

func (x *SaleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_v1_payment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaleRequest.ProtoReflect.Descriptor instead.
func (*SaleRequest) Descriptor() ([]byte, []int) {
	return file_proto_payment_v1_payment_proto_rawDescGZIP(), []int{2}
}

func (x *SaleRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *SaleRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *SaleRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *SaleRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *SaleRequest) GetPaymentMethod() isSaleRequest_PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return nil
}

func (x *SaleRequest) GetPaymentMethodId() string {
	if x != nil {
		if x, ok := x.PaymentMethod.(*SaleRequest_PaymentMethodId); ok {
			return x.PaymentMethodId
		}
	}
	return ""
}

func (x *SaleRequest) GetPaymentToken() string {
	if x != nil {
		if x, ok := x.PaymentMethod.(*SaleRequest_PaymentToken); ok {
			return x.PaymentToken
		}
	}
	return ""
}

func (x *SaleRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *SaleRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type isSaleRequest_PaymentMethod interface {
	isSaleRequest_PaymentMethod()
}

type SaleRequest_PaymentMethodId struct {
	PaymentMethodId string `protobuf:"bytes,5,opt,name=payment_method_id,json=paymentMethodId,proto3,oneof"` // UUID of saved payment method
}

type SaleRequest_PaymentToken struct {
	PaymentToken string `protobuf:"bytes,6,opt,name=payment_token,json=paymentToken,proto3,oneof"` // EPX token (AUTH_GUID/BRIC) for one-time use
}

func (*SaleRequest_PaymentMethodId) isSaleRequest_PaymentMethod() {}

func (*SaleRequest_PaymentToken) isSaleRequest_PaymentMethod() {}

// VoidRequest cancels an authorized or captured payment
type VoidRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TransactionId  string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	IdempotencyKey string                 `protobuf:"bytes,2,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *VoidRequest) Reset() {
	*x = VoidRequest{}
	mi := &file_proto_payment_v1_payment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoidRequest) ProtoMessage() {}

func (x *VoidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_v1_payment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoidRequest.ProtoReflect.Descriptor instead.
func (*VoidRequest) Descriptor() ([]byte, []int) {
	return file_proto_payment_v1_payment_proto_rawDescGZIP(), []int{3}
}

func (x *VoidRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *VoidRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

// RefundRequest refunds a captured payment
type RefundRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TransactionId  string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Amount         string                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"` // Optional: partial refund amount
	Reason         string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	IdempotencyKey string                 `protobuf:"bytes,4,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RefundRequest) Reset() {
	*x = RefundRequest{}
	mi := &file_proto_payment_v1_payment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundRequest) ProtoMessage() {}

func (x *RefundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_v1_payment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundRequest.ProtoReflect.Descriptor instead.
func (*RefundRequest) Descriptor() ([]byte, []int) {
	return file_proto_payment_v1_payment_proto_rawDescGZIP(), []int{4}
}

func (x *RefundRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *RefundRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *RefundRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *RefundRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

// GetTransactionRequest retrieves a transaction
type GetTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionRequest) Reset() {
	*x = GetTransactionRequest{}
	mi := &file_proto_payment_v1_payment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionRequest) ProtoMessage() {}

func (x *GetTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_v1_payment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionRequest) Descriptor() ([]byte, []int) {
	return file_proto_payment_v1_payment_proto_rawDescGZIP(), []int{5}
}

func (x *GetTransactionRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

// ListTransactionsRequest lists transactions
type ListTransactionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	CustomerId    string                 `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`          // Optional: filter by customer
	GroupId       string                 `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`                   // Optional: get all transactions in a group
	Status        TransactionStatus      `protobuf:"varint,4,opt,name=status,proto3,enum=payment.v1.TransactionStatus" json:"status,omitempty"` // Optional: filter by status
	Limit         int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`                                     // Default: 100
	Offset        int32                  `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTransactionsRequest) Reset() {
	*x = ListTransactionsRequest{}
	mi := &file_proto_payment_v1_payment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransactionsRequest) ProtoMessage() {}

func (x *ListTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_v1_payment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransactionsRequest.ProtoReflect.Descriptor instead.
func (*ListTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_payment_v1_payment_proto_rawDescGZIP(), []int{6}
}

func (x *ListTransactionsRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ListTransactionsRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *ListTransactionsRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *ListTransactionsRequest) GetStatus() TransactionStatus {
	if x != nil {
		return x.Status
	}
	return TransactionStatus_TRANSACTION_STATUS_UNSPECIFIED
}

func (x *ListTransactionsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListTransactionsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// ListTransactionsResponse contains transaction list
type ListTransactionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transactions  []*Transaction         `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTransactionsResponse) Reset() {
	*x = ListTransactionsResponse{}
	mi := &file_proto_payment_v1_payment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransactionsResponse) ProtoMessage() {}

func (x *ListTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_v1_payment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransactionsResponse.ProtoReflect.Descriptor instead.
func (*ListTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_payment_v1_payment_proto_rawDescGZIP(), []int{7}
}

func (x *ListTransactionsResponse) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *ListTransactionsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// PaymentResponse is returned from payment operations
type PaymentResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TransactionId     string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	GroupId           string                 `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"` // Transaction group ID (links related transactions)
	AgentId           string                 `protobuf:"bytes,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	CustomerId        string                 `protobuf:"bytes,4,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Amount            string                 `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"` // Decimal as string
	Currency          string                 `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	Status            TransactionStatus      `protobuf:"varint,7,opt,name=status,proto3,enum=payment.v1.TransactionStatus" json:"status,omitempty"`
	Type              TransactionType        `protobuf:"varint,8,opt,name=type,proto3,enum=payment.v1.TransactionType" json:"type,omitempty"`
	PaymentMethodType PaymentMethodType      `protobuf:"varint,9,opt,name=payment_method_type,json=paymentMethodType,proto3,enum=payment.v1.PaymentMethodType" json:"payment_method_type,omitempty"`
	// EPX Gateway response fields
	AuthGuid      string                 `protobuf:"bytes,10,opt,name=auth_guid,json=authGuid,proto3" json:"auth_guid,omitempty"`               // EPX token for this transaction
	AuthResp      string                 `protobuf:"bytes,11,opt,name=auth_resp,json=authResp,proto3" json:"auth_resp,omitempty"`               // EPX approval code ("00" = approved)
	AuthCode      string                 `protobuf:"bytes,12,opt,name=auth_code,json=authCode,proto3" json:"auth_code,omitempty"`               // Bank authorization code
	AuthRespText  string                 `protobuf:"bytes,13,opt,name=auth_resp_text,json=authRespText,proto3" json:"auth_resp_text,omitempty"` // Human-readable response message
	AuthCardType  string                 `protobuf:"bytes,14,opt,name=auth_card_type,json=authCardType,proto3" json:"auth_card_type,omitempty"` // Card brand (V/M/A/D)
	AuthAvs       string                 `protobuf:"bytes,15,opt,name=auth_avs,json=authAvs,proto3" json:"auth_avs,omitempty"`                  // Address verification result
	AuthCvv2      string                 `protobuf:"bytes,16,opt,name=auth_cvv2,json=authCvv2,proto3" json:"auth_cvv2,omitempty"`               // CVV verification result
	IsApproved    bool                   `protobuf:"varint,17,opt,name=is_approved,json=isApproved,proto3" json:"is_approved,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,19,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentResponse) Reset() {
	*x = PaymentResponse{}
	mi := &file_proto_payment_v1_payment_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentResponse) ProtoMessage() {}

func (x *PaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_v1_payment_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentResponse.ProtoReflect.Descriptor instead.
func (*PaymentResponse) Descriptor() ([]byte, []int) {
	return file_proto_payment_v1_payment_proto_rawDescGZIP(), []int{8}
}

func (x *PaymentResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *PaymentResponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *PaymentResponse) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *PaymentResponse) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *PaymentResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *PaymentResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PaymentResponse) GetStatus() TransactionStatus {
	if x != nil {
		return x.Status
	}
	return TransactionStatus_TRANSACTION_STATUS_UNSPECIFIED
}

func (x *PaymentResponse) GetType() TransactionType {
	if x != nil {
		return x.Type
	}
	return TransactionType_TRANSACTION_TYPE_UNSPECIFIED
}

func (x *PaymentResponse) GetPaymentMethodType() PaymentMethodType {
	if x != nil {
		return x.PaymentMethodType
	}
	return PaymentMethodType_PAYMENT_METHOD_TYPE_UNSPECIFIED
}

func (x *PaymentResponse) GetAuthGuid() string {
	if x != nil {
		return x.AuthGuid
	}
	return ""
}

func (x *PaymentResponse) GetAuthResp() string {
	if x != nil {
		return x.AuthResp
	}
	return ""
}

func (x *PaymentResponse) GetAuthCode() string {
	if x != nil {
		return x.AuthCode
	}
	return ""
}

func (x *PaymentResponse) GetAuthRespText() string {
	if x != nil {
		return x.AuthRespText
	}
	return ""
}

func (x *PaymentResponse) GetAuthCardType() string {
	if x != nil {
		return x.AuthCardType
	}
	return ""
}

func (x *PaymentResponse) GetAuthAvs() string {
	if x != nil {
		return x.AuthAvs
	}
	return ""
}

func (x *PaymentResponse) GetAuthCvv2() string {
	if x != nil {
		return x.AuthCvv2
	}
	return ""
}

func (x *PaymentResponse) GetIsApproved() bool {
	if x != nil {
		return x.IsApproved
	}
	return false
}

func (x *PaymentResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PaymentResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Transaction represents a complete transaction record
type Transaction struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GroupId           string                 `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"` // Links related transactions (auth → capture → refund)
	AgentId           string                 `protobuf:"bytes,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	CustomerId        string                 `protobuf:"bytes,4,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"` // Nullable for guest transactions
	Amount            string                 `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency          string                 `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	Status            TransactionStatus      `protobuf:"varint,7,opt,name=status,proto3,enum=payment.v1.TransactionStatus" json:"status,omitempty"`
	Type              TransactionType        `protobuf:"varint,8,opt,name=type,proto3,enum=payment.v1.TransactionType" json:"type,omitempty"`
	PaymentMethodType PaymentMethodType      `protobuf:"varint,9,opt,name=payment_method_type,json=paymentMethodType,proto3,enum=payment.v1.PaymentMethodType" json:"payment_method_type,omitempty"`
	PaymentMethodId   string                 `protobuf:"bytes,10,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"` // Saved payment method used (if any)
	// EPX Gateway response fields
	AuthGuid       string                 `protobuf:"bytes,11,opt,name=auth_guid,json=authGuid,proto3" json:"auth_guid,omitempty"`               // EPX token for this transaction
	AuthResp       string                 `protobuf:"bytes,12,opt,name=auth_resp,json=authResp,proto3" json:"auth_resp,omitempty"`               // EPX approval code
	AuthCode       string                 `protobuf:"bytes,13,opt,name=auth_code,json=authCode,proto3" json:"auth_code,omitempty"`               // Bank authorization code
	AuthRespText   string                 `protobuf:"bytes,14,opt,name=auth_resp_text,json=authRespText,proto3" json:"auth_resp_text,omitempty"` // Human-readable response
	AuthCardType   string                 `protobuf:"bytes,15,opt,name=auth_card_type,json=authCardType,proto3" json:"auth_card_type,omitempty"` // Card brand
	AuthAvs        string                 `protobuf:"bytes,16,opt,name=auth_avs,json=authAvs,proto3" json:"auth_avs,omitempty"`                  // Address verification
	AuthCvv2       string                 `protobuf:"bytes,17,opt,name=auth_cvv2,json=authCvv2,proto3" json:"auth_cvv2,omitempty"`               // CVV verification
	IdempotencyKey string                 `protobuf:"bytes,18,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Metadata       map[string]string      `protobuf:"bytes,21,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_proto_payment_v1_payment_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_v1_payment_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_proto_payment_v1_payment_proto_rawDescGZIP(), []int{9}
}

func (x *Transaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Transaction) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Transaction) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *Transaction) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *Transaction) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Transaction) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Transaction) GetStatus() TransactionStatus {
	if x != nil {
		return x.Status
	}
	return TransactionStatus_TRANSACTION_STATUS_UNSPECIFIED
}

func (x *Transaction) GetType() TransactionType {
	if x != nil {
		return x.Type
	}
	return TransactionType_TRANSACTION_TYPE_UNSPECIFIED
}

func (x *Transaction) GetPaymentMethodType() PaymentMethodType {
	if x != nil {
		return x.PaymentMethodType
	}
	return PaymentMethodType_PAYMENT_METHOD_TYPE_UNSPECIFIED
}

func (x *Transaction) GetPaymentMethodId() string {
	if x != nil {
		return x.PaymentMethodId
	}
	return ""
}

func (x *Transaction) GetAuthGuid() string {
	if x != nil {
		return x.AuthGuid
	}
	return ""
}

func (x *Transaction) GetAuthResp() string {
	if x != nil {
		return x.AuthResp
	}
	return ""
}

func (x *Transaction) GetAuthCode() string {
	if x != nil {
		return x.AuthCode
	}
	return ""
}

func (x *Transaction) GetAuthRespText() string {
	if x != nil {
		return x.AuthRespText
	}
	return ""
}

func (x *Transaction) GetAuthCardType() string {
	if x != nil {
		return x.AuthCardType
	}
	return ""
}

func (x *Transaction) GetAuthAvs() string {
	if x != nil {
		return x.AuthAvs
	}
	return ""
}

func (x *Transaction) GetAuthCvv2() string {
	if x != nil {
		return x.AuthCvv2
	}
	return ""
}

func (x *Transaction) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *Transaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Transaction) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Transaction) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_proto_payment_v1_payment_proto protoreflect.FileDescriptor

const file_proto_payment_v1_payment_proto_rawDesc = "" +
	"\n" +
	"\x1eproto/payment/v1/payment.proto\x12\n" +
	"payment.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x97\x03\n" +
	"\x10AuthorizeRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x1f\n" +
	"\vcustomer_id\x18\x02 \x01(\tR\n" +
	"customerId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\tR\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12,\n" +
	"\x11payment_method_id\x18\x05 \x01(\tH\x00R\x0fpaymentMethodId\x12%\n" +
	"\rpayment_token\x18\x06 \x01(\tH\x00R\fpaymentToken\x12'\n" +
	"\x0fidempotency_key\x18\a \x01(\tR\x0eidempotencyKey\x12F\n" +
	"\bmetadata\x18\b \x03(\v2*.payment.v1.AuthorizeRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x10\n" +
	"\x0epayment_method\"x\n" +
	"\x0eCaptureRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\tR\x06amount\x12'\n" +
	"\x0fidempotency_key\x18\x03 \x01(\tR\x0eidempotencyKey\"\x8d\x03\n" +
	"\vSaleRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x1f\n" +
	"\vcustomer_id\x18\x02 \x01(\tR\n" +
	"customerId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\tR\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12,\n" +
	"\x11payment_method_id\x18\x05 \x01(\tH\x00R\x0fpaymentMethodId\x12%\n" +
	"\rpayment_token\x18\x06 \x01(\tH\x00R\fpaymentToken\x12'\n" +
	"\x0fidempotency_key\x18\a \x01(\tR\x0eidempotencyKey\x12A\n" +
	"\bmetadata\x18\b \x03(\v2%.payment.v1.SaleRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x10\n" +
	"\x0epayment_method\"]\n" +
	"\vVoidRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12'\n" +
	"\x0fidempotency_key\x18\x02 \x01(\tR\x0eidempotencyKey\"\x8f\x01\n" +
	"\rRefundRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\tR\x06amount\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12'\n" +
	"\x0fidempotency_key\x18\x04 \x01(\tR\x0eidempotencyKey\">\n" +
	"\x15GetTransactionRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\"\xd5\x01\n" +
	"\x17ListTransactionsRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x1f\n" +
	"\vcustomer_id\x18\x02 \x01(\tR\n" +
	"customerId\x12\x19\n" +
	"\bgroup_id\x18\x03 \x01(\tR\agroupId\x125\n" +
	"\x06status\x18\x04 \x01(\x0e2\x1d.payment.v1.TransactionStatusR\x06status\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x06 \x01(\x05R\x06offset\"x\n" +
	"\x18ListTransactionsResponse\x12;\n" +
	"\ftransactions\x18\x01 \x03(\v2\x17.payment.v1.TransactionR\ftransactions\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\xb5\x06\n" +
	"\x0fPaymentResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\x12\x19\n" +
	"\bagent_id\x18\x03 \x01(\tR\aagentId\x12\x1f\n" +
	"\vcustomer_id\x18\x04 \x01(\tR\n" +
	"customerId\x12\x16\n" +
	"\x06amount\x18\x05 \x01(\tR\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x06 \x01(\tR\bcurrency\x125\n" +
	"\x06status\x18\a \x01(\x0e2\x1d.payment.v1.TransactionStatusR\x06status\x12/\n" +
	"\x04type\x18\b \x01(\x0e2\x1b.payment.v1.TransactionTypeR\x04type\x12M\n" +
	"\x13payment_method_type\x18\t \x01(\x0e2\x1d.payment.v1.PaymentMethodTypeR\x11paymentMethodType\x12\x1b\n" +
	"\tauth_guid\x18\n" +
	" \x01(\tR\bauthGuid\x12\x1b\n" +
	"\tauth_resp\x18\v \x01(\tR\bauthResp\x12\x1b\n" +
	"\tauth_code\x18\f \x01(\tR\bauthCode\x12$\n" +
	"\x0eauth_resp_text\x18\r \x01(\tR\fauthRespText\x12$\n" +
	"\x0eauth_card_type\x18\x0e \x01(\tR\fauthCardType\x12\x19\n" +
	"\bauth_avs\x18\x0f \x01(\tR\aauthAvs\x12\x1b\n" +
	"\tauth_cvv2\x18\x10 \x01(\tR\bauthCvv2\x12\x1f\n" +
	"\vis_approved\x18\x11 \x01(\bR\n" +
	"isApproved\x129\n" +
	"\n" +
	"created_at\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12E\n" +
	"\bmetadata\x18\x13 \x03(\v2).payment.v1.PaymentResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x85\a\n" +
	"\vTransaction\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\x12\x19\n" +
	"\bagent_id\x18\x03 \x01(\tR\aagentId\x12\x1f\n" +
	"\vcustomer_id\x18\x04 \x01(\tR\n" +
	"customerId\x12\x16\n" +
	"\x06amount\x18\x05 \x01(\tR\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x06 \x01(\tR\bcurrency\x125\n" +
	"\x06status\x18\a \x01(\x0e2\x1d.payment.v1.TransactionStatusR\x06status\x12/\n" +
	"\x04type\x18\b \x01(\x0e2\x1b.payment.v1.TransactionTypeR\x04type\x12M\n" +
	"\x13payment_method_type\x18\t \x01(\x0e2\x1d.payment.v1.PaymentMethodTypeR\x11paymentMethodType\x12*\n" +
	"\x11payment_method_id\x18\n" +
	" \x01(\tR\x0fpaymentMethodId\x12\x1b\n" +
	"\tauth_guid\x18\v \x01(\tR\bauthGuid\x12\x1b\n" +
	"\tauth_resp\x18\f \x01(\tR\bauthResp\x12\x1b\n" +
	"\tauth_code\x18\r \x01(\tR\bauthCode\x12$\n" +
	"\x0eauth_resp_text\x18\x0e \x01(\tR\fauthRespText\x12$\n" +
	"\x0eauth_card_type\x18\x0f \x01(\tR\fauthCardType\x12\x19\n" +
	"\bauth_avs\x18\x10 \x01(\tR\aauthAvs\x12\x1b\n" +
	"\tauth_cvv2\x18\x11 \x01(\tR\bauthCvv2\x12'\n" +
	"\x0fidempotency_key\x18\x12 \x01(\tR\x0eidempotencyKey\x129\n" +
	"\n" +
	"created_at\x18\x13 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x14 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12A\n" +
	"\bmetadata\x18\x15 \x03(\v2%.payment.v1.Transaction.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\xd8\x01\n" +
	"\x11TransactionStatus\x12\"\n" +
	"\x1eTRANSACTION_STATUS_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aTRANSACTION_STATUS_PENDING\x10\x01\x12 \n" +
	"\x1cTRANSACTION_STATUS_COMPLETED\x10\x02\x12\x1d\n" +
	"\x19TRANSACTION_STATUS_FAILED\x10\x03\x12\x1f\n" +
	"\x1bTRANSACTION_STATUS_REFUNDED\x10\x04\x12\x1d\n" +
	"\x19TRANSACTION_STATUS_VOIDED\x10\x05*\xc5\x01\n" +
	"\x0fTransactionType\x12 \n" +
	"\x1cTRANSACTION_TYPE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15TRANSACTION_TYPE_AUTH\x10\x01\x12\x1c\n" +
	"\x18TRANSACTION_TYPE_CAPTURE\x10\x02\x12\x1b\n" +
	"\x17TRANSACTION_TYPE_CHARGE\x10\x03\x12\x1b\n" +
	"\x17TRANSACTION_TYPE_REFUND\x10\x04\x12\x1d\n" +
	"\x19TRANSACTION_TYPE_PRE_NOTE\x10\x05*z\n" +
	"\x11PaymentMethodType\x12#\n" +
	"\x1fPAYMENT_METHOD_TYPE_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fPAYMENT_METHOD_TYPE_CREDIT_CARD\x10\x01\x12\x1b\n" +
	"\x17PAYMENT_METHOD_TYPE_ACH\x10\x022\x87\x04\n" +
	"\x0ePaymentService\x12F\n" +
	"\tAuthorize\x12\x1c.payment.v1.AuthorizeRequest\x1a\x1b.payment.v1.PaymentResponse\x12B\n" +
	"\aCapture\x12\x1a.payment.v1.CaptureRequest\x1a\x1b.payment.v1.PaymentResponse\x12<\n" +
	"\x04Sale\x12\x17.payment.v1.SaleRequest\x1a\x1b.payment.v1.PaymentResponse\x12<\n" +
	"\x04Void\x12\x17.payment.v1.VoidRequest\x1a\x1b.payment.v1.PaymentResponse\x12@\n" +
	"\x06Refund\x12\x19.payment.v1.RefundRequest\x1a\x1b.payment.v1.PaymentResponse\x12L\n" +
	"\x0eGetTransaction\x12!.payment.v1.GetTransactionRequest\x1a\x17.payment.v1.Transaction\x12]\n" +
	"\x10ListTransactions\x12#.payment.v1.ListTransactionsRequest\x1a$.payment.v1.ListTransactionsResponseBBZ@github.com/kevin07696/payment-service/proto/payment/v1;paymentv1b\x06proto3"

var (
	file_proto_payment_v1_payment_proto_rawDescOnce sync.Once
	file_proto_payment_v1_payment_proto_rawDescData []byte
)

func file_proto_payment_v1_payment_proto_rawDescGZIP() []byte {
	file_proto_payment_v1_payment_proto_rawDescOnce.Do(func() {
		file_proto_payment_v1_payment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_payment_v1_payment_proto_rawDesc), len(file_proto_payment_v1_payment_proto_rawDesc)))
	})
	return file_proto_payment_v1_payment_proto_rawDescData
}

var file_proto_payment_v1_payment_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_payment_v1_payment_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_payment_v1_payment_proto_goTypes = []any{
	(TransactionStatus)(0),           // 0: payment.v1.TransactionStatus
	(TransactionType)(0),             // 1: payment.v1.TransactionType
	(PaymentMethodType)(0),           // 2: payment.v1.PaymentMethodType
	(*AuthorizeRequest)(nil),         // 3: payment.v1.AuthorizeRequest
	(*CaptureRequest)(nil),           // 4: payment.v1.CaptureRequest
	(*SaleRequest)(nil),              // 5: payment.v1.SaleRequest
	(*VoidRequest)(nil),              // 6: payment.v1.VoidRequest
	(*RefundRequest)(nil),            // 7: payment.v1.RefundRequest
	(*GetTransactionRequest)(nil),    // 8: payment.v1.GetTransactionRequest
	(*ListTransactionsRequest)(nil),  // 9: payment.v1.ListTransactionsRequest
	(*ListTransactionsResponse)(nil), // 10: payment.v1.ListTransactionsResponse
	(*PaymentResponse)(nil),          // 11: payment.v1.PaymentResponse
	(*Transaction)(nil),              // 12: payment.v1.Transaction
	nil,                              // 13: payment.v1.AuthorizeRequest.MetadataEntry
	nil,                              // 14: payment.v1.SaleRequest.MetadataEntry
	nil,                              // 15: payment.v1.PaymentResponse.MetadataEntry
	nil,                              // 16: payment.v1.Transaction.MetadataEntry
	(*timestamppb.Timestamp)(nil),    // 17: google.protobuf.Timestamp
}
var file_proto_payment_v1_payment_proto_depIdxs = []int32{
	13, // 0: payment.v1.AuthorizeRequest.metadata:type_name -> payment.v1.AuthorizeRequest.MetadataEntry
	14, // 1: payment.v1.SaleRequest.metadata:type_name -> payment.v1.SaleRequest.MetadataEntry
	0,  // 2: payment.v1.ListTransactionsRequest.status:type_name -> payment.v1.TransactionStatus
	12, // 3: payment.v1.ListTransactionsResponse.transactions:type_name -> payment.v1.Transaction
	0,  // 4: payment.v1.PaymentResponse.status:type_name -> payment.v1.TransactionStatus
	1,  // 5: payment.v1.PaymentResponse.type:type_name -> payment.v1.TransactionType
	2,  // 6: payment.v1.PaymentResponse.payment_method_type:type_name -> payment.v1.PaymentMethodType
	17, // 7: payment.v1.PaymentResponse.created_at:type_name -> google.protobuf.Timestamp
	15, // 8: payment.v1.PaymentResponse.metadata:type_name -> payment.v1.PaymentResponse.MetadataEntry
	0,  // 9: payment.v1.Transaction.status:type_name -> payment.v1.TransactionStatus
	1,  // 10: payment.v1.Transaction.type:type_name -> payment.v1.TransactionType
	2,  // 11: payment.v1.Transaction.payment_method_type:type_name -> payment.v1.PaymentMethodType
	17, // 12: payment.v1.Transaction.created_at:type_name -> google.protobuf.Timestamp
	17, // 13: payment.v1.Transaction.updated_at:type_name -> google.protobuf.Timestamp
	16, // 14: payment.v1.Transaction.metadata:type_name -> payment.v1.Transaction.MetadataEntry
	3,  // 15: payment.v1.PaymentService.Authorize:input_type -> payment.v1.AuthorizeRequest
	4,  // 16: payment.v1.PaymentService.Capture:input_type -> payment.v1.CaptureRequest
	5,  // 17: payment.v1.PaymentService.Sale:input_type -> payment.v1.SaleRequest
	6,  // 18: payment.v1.PaymentService.Void:input_type -> payment.v1.VoidRequest
	7,  // 19: payment.v1.PaymentService.Refund:input_type -> payment.v1.RefundRequest
	8,  // 20: payment.v1.PaymentService.GetTransaction:input_type -> payment.v1.GetTransactionRequest
	9,  // 21: payment.v1.PaymentService.ListTransactions:input_type -> payment.v1.ListTransactionsRequest
	11, // 22: payment.v1.PaymentService.Authorize:output_type -> payment.v1.PaymentResponse
	11, // 23: payment.v1.PaymentService.Capture:output_type -> payment.v1.PaymentResponse
	11, // 24: payment.v1.PaymentService.Sale:output_type -> payment.v1.PaymentResponse
	11, // 25: payment.v1.PaymentService.Void:output_type -> payment.v1.PaymentResponse
	11, // 26: payment.v1.PaymentService.Refund:output_type -> payment.v1.PaymentResponse
	12, // 27: payment.v1.PaymentService.GetTransaction:output_type -> payment.v1.Transaction
	10, // 28: payment.v1.PaymentService.ListTransactions:output_type -> payment.v1.ListTransactionsResponse
	22, // [22:29] is the sub-list for method output_type
	15, // [15:22] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_payment_v1_payment_proto_init() }
func file_proto_payment_v1_payment_proto_init() {
	if File_proto_payment_v1_payment_proto != nil {
		return
	}
	file_proto_payment_v1_payment_proto_msgTypes[0].OneofWrappers = []any{
		(*AuthorizeRequest_PaymentMethodId)(nil),
		(*AuthorizeRequest_PaymentToken)(nil),
	}
	file_proto_payment_v1_payment_proto_msgTypes[2].OneofWrappers = []any{
		(*SaleRequest_PaymentMethodId)(nil),
		(*SaleRequest_PaymentToken)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_payment_v1_payment_proto_rawDesc), len(file_proto_payment_v1_payment_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_payment_v1_payment_proto_goTypes,
		DependencyIndexes: file_proto_payment_v1_payment_proto_depIdxs,
		EnumInfos:         file_proto_payment_v1_payment_proto_enumTypes,
		MessageInfos:      file_proto_payment_v1_payment_proto_msgTypes,
	}.Build()
	File_proto_payment_v1_payment_proto = out.File
	file_proto_payment_v1_payment_proto_goTypes = nil
	file_proto_payment_v1_payment_proto_depIdxs = nil
}
